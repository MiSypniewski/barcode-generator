{"version":3,"sources":["components/atoms/Button.js","components/atoms/Input.js","components/organisms/Inputer.js","components/atoms/Name.js","components/atoms/Serial.js","components/molecules/Table.js","App.js","index.js"],"names":["StyledButton","styled","button","_templateObject","Button","_ref","children","fn","react_default","a","createElement","onClick","StyledInput","input","Input_templateObject","StyledNumberInput","Inputer_templateObject","Wrapper","div","_templateObject2","StyledLabel","label","_templateObject3","Inputer","changeFn","hideFn","addFn","exceptions","text","title","columns","off","disabled","Input","placeholder","name","onChange","value","type","min","max","atoms_Button","StyledName","Name_templateObject","Name","index","concat","StyledSerial","Serial_templateObject","Serial","tmpSerial","serial","replace","StyledRow","Table_templateObject","number","Table","_ref2","list","Fragment","map","items","atoms_Name","key","item","serials","atoms_Serial","GlobalStyle","createGlobalStyle","App_templateObject","i","App","state","handleButtonAdd","_this","newString","length","zonk","slice","RegExp","split","forEach","tmp","setState","prevState","Object","toConsumableArray","handleButtonHide","handleChange","e","defineProperty","target","this","organisms_Inputer","assign","molecules_Table","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.040a1b72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-block;\r\n  min-width: 50px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n  margin: 10px;\r\n  padding: 0 10px;\r\n  color: #fff;\r\n  border-color: transparent;\r\n  background-color: #3273dc;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  height: 2.5em;\r\n  line-height: 1.5;\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n`;\r\n\r\nconst Button = ({ children, fn }) => <StyledButton onClick={fn}>{children}</StyledButton>;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  padding: 2px;\r\n  margin: 0px 10px;\r\n  border-color: #3273dc;\r\n  height: 2.5em;\r\n  padding-left: calc(0.75em - 1px);\r\n  padding-right: calc(0.75em - 1px);\r\n  border: 0.5px solid #3273dc;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 0.0625em 0.125em rgba(10, 10, 10, 0.05);\r\n`;\r\n\r\nexport default StyledInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../atoms/Button\";\r\nimport StyledInput from \"../atoms/Input\";\r\n\r\nconst StyledNumberInput = styled(StyledInput)`\r\n  width: 60px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  border-bottom: 2px solid #3273dc;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-left: 40px;\r\n`;\r\n\r\nconst Inputer = ({ changeFn, hideFn, addFn, exceptions, text, title, columns, off }) => (\r\n  <Wrapper disabled={off ? true : false}>\r\n    <StyledInput placeholder=\"Device name\" name=\"title\" onChange={changeFn} value={title} />\r\n    <StyledInput placeholder=\"Serial numbers\" name=\"text\" type=\"text\" onChange={changeFn} value={text} />\r\n    <StyledInput\r\n      placeholder=\"Do not divide after (min 2 chars)\"\r\n      name=\"exceptions\"\r\n      onChange={changeFn}\r\n      value={exceptions}\r\n    />\r\n    <StyledLabel>\r\n      Columns:\r\n      <StyledNumberInput type=\"number\" min=\"2\" max=\"9\" name=\"columns\" onChange={changeFn} value={columns} />\r\n    </StyledLabel>\r\n    <Button fn={addFn}>Add</Button>\r\n    <Button fn={hideFn}>Hide bar and print!</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Inputer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledName = styled.div`\r\n  font-size: 17px;\r\n  padding: 15px 0px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Name = ({ index, title }) => <StyledName>{`${index}. ${title}`}</StyledName>;\r\n\r\nexport default Name;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSerial = styled.div`\r\n  font-family: \"Libre Barcode 39 Text\";\r\n  font-size: 29px;\r\n  padding: 9px 0px;\r\n`;\r\n\r\nconst Serial = ({ serial }) => {\r\n  const tmpSerial = serial.replace(\"ZONKZONKZONK\", \" \");\r\n  return <StyledSerial>{`*${tmpSerial}*`}</StyledSerial>;\r\n};\r\n\r\nexport default Serial;\r\n","import React from \"react\";\r\nimport Name from \"../atoms/Name\";\r\nimport Serial from \"../atoms/Serial\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledRow = styled(\"div\")`\r\n  display: grid;\r\n  grid-template-columns: repeat(${({ number }) => number}, 1fr);\r\n  grid-template-rows: repeat(auto - fill, 1fr);\r\n  border-bottom: 1px solid black;\r\n  text-align: center;\r\n`;\r\n\r\nconst Table = ({ list, columns }) => (\r\n  <>\r\n    {list.map((items) => (\r\n      <StyledRow number={columns}>\r\n        <Name key={items.item} title={items.title} index={items.index} />\r\n        {items.serials.map((item) => (\r\n          <Serial key={item} serial={item} />\r\n        ))}\r\n      </StyledRow>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Inputer from \"./components/organisms/Inputer\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport Table from \"./components/molecules/Table\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    @import url('https://fonts.googleapis.com/css?family=Libre+Barcode+39+Text');\r\n    *{\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n`;\r\n\r\nlet i = 0;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    text: \"\",\r\n    list: [],\r\n    off: false,\r\n    title: \"\",\r\n    columns: 3,\r\n    exceptions: \"\",\r\n  };\r\n\r\n  handleButtonAdd = () => {\r\n    const text = this.state.text;\r\n    const title = this.state.title;\r\n\r\n    const exceptions = this.state.exceptions;\r\n    let newString = \"\";\r\n    if (exceptions.length > 1) {\r\n      const zonk = exceptions.slice(0, exceptions.length - 1);\r\n      newString = text.replace(new RegExp(exceptions, \"gi\"), `${zonk}ZONKZONKZONK`);\r\n    } else {\r\n      newString = text;\r\n    }\r\n\r\n    const split = newString.split(\" \");\r\n    split.forEach((items) => {\r\n      i++;\r\n      const tmp = items.split(\"\\t\");\r\n      const item = {\r\n        index: i,\r\n        title: title,\r\n        serials: tmp,\r\n      };\r\n      this.setState((prevState) => ({\r\n        list: [...prevState.list, item],\r\n      }));\r\n    });\r\n    this.setState({\r\n      text: \"\",\r\n      title: \"\",\r\n    });\r\n  };\r\n\r\n  handleButtonHide = () => {\r\n    this.setState({\r\n      off: true,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        {!this.state.off ? (\r\n          <Inputer\r\n            {...this.state}\r\n            changeFn={this.handleChange}\r\n            hideFn={this.handleButtonHide}\r\n            addFn={this.handleButtonAdd}\r\n          />\r\n        ) : null}\r\n        <>{this.state.list.length > 0 && <Table list={this.state.list} columns={this.state.columns} />}</>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}